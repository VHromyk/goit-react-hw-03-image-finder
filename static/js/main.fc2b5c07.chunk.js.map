{"version":3,"sources":["services/images-api.js","components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Button/Button.js","components/Container/Container.js","components/Modal/Modal.js","components/Spiner/Spiner.js","components/ImageGallery/ImageGallery.js","App.js","index.js"],"names":["searchQuery","currentPage","perPage","axios","get","then","response","data","hits","Searchbar","state","query","inputHandler","event","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","className","this","type","onChange","autoComplete","autoFocus","placeholder","Component","ImageGalleryItem","img","alt","onClick","src","Button","Container","children","Modal","handleKeyDown","e","code","onClose","handleBackdrop","target","window","addEventListener","removeEventListener","Spiner","color","height","width","ImageGallery","isLoading","error","showModal","largeImageURL","largeImageALT","scroll","onChangeQuery","fetchImages","options","imagesApi","prevState","catch","finally","toggleModal","url","prevProps","shouldRenderLoadMoreBtn","length","map","item","webformatURL","tags","id","scrollTo","top","document","documentElement","scrollHeight","behavior","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fc2b5c07.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nconst fetchImages = ({ searchQuery = '', currentPage = 1, perPage = 12 }) => {\r\n  const token = '19790179-de8e0f050de34d9c55fd8172a';\r\n\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?q=${searchQuery}&page=${currentPage}&key=${token}&image_type=photo&orientation=horizontal&per_page=${perPage}`,\r\n    )\r\n    .then(response => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React, { Component } from 'react';\r\nimport './Searchbar.scss';\r\n\r\nclass Searchbar extends Component {\r\n  state = {\r\n    query: '',\r\n  };\r\n\r\n  inputHandler = event => {\r\n    const { value } = event.currentTarget;\r\n    this.setState({\r\n      query: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.query);\r\n    this.setState({ query: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            onChange={this.inputHandler}\r\n            value={this.state.query}\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\nimport './ImageGalleryItem.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ImageGalleryItem = ({ img, alt, onClick }) => (\r\n  <li onClick={onClick} className=\"ImageGalleryItem\">\r\n    <img src={img} alt={alt} className=\"ImageGalleryItem-image\" />\r\n  </li>\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n  img: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\nexport default ImageGalleryItem;\r\n","import React from 'react';\r\nimport './Button.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ onClick }) => {\r\n  return (\r\n    <>\r\n      <button className=\"Button\" onClick={onClick}>\r\n        Load more\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\nimport './Container.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\r\n\r\nContainer.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Container;\r\n","import React, { Component } from 'react';\r\nimport './Modal.scss';\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n\r\n  handleBackdrop = event => {\r\n    if (event.currentTarget === event.target) {\r\n      this.props.onClose();\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\" onClick={this.handleBackdrop}>\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\nimport './Spiner.scss';\r\n\r\nconst Spiner = () => (\r\n  <div className=\"Spiner\">\r\n    <Loader type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\r\n  </div>\r\n);\r\n\r\nexport default Spiner;\r\n","import React, { Component } from 'react';\r\nimport imagesApi from '../../services/images-api';\r\nimport Searchbar from '../../components/Searchbar';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport Button from '../Button';\r\nimport './ImageGallery.scss';\r\nimport Container from '../Container';\r\nimport Modal from '../Modal';\r\nimport Spiner from '../Spiner';\r\n\r\nclass ImageGallery extends Component {\r\n  state = {\r\n    hits: [],\r\n    searchQuery: '',\r\n    currentPage: 1,\r\n    perPage: 12,\r\n    isLoading: false,\r\n    error: null,\r\n    showModal: false,\r\n    largeImageURL: '',\r\n    largeImageALT: '',\r\n    scroll: false,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (this.state.searchQuery !== prevState.searchQuery) {\r\n      this.fetchImages();\r\n    }\r\n  }\r\n\r\n  onChangeQuery = query => {\r\n    this.setState({\r\n      searchQuery: query,\r\n      currentPage: 1,\r\n      hits: [],\r\n      error: null,\r\n      showModal: false,\r\n    });\r\n  };\r\n\r\n  fetchImages = () => {\r\n    const { searchQuery, currentPage, perPage } = this.state;\r\n\r\n    const options = {\r\n      searchQuery,\r\n      currentPage,\r\n      perPage,\r\n    };\r\n\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n\r\n    imagesApi\r\n      .fetchImages(options)\r\n      .then(hits => {\r\n        this.setState(prevState => ({\r\n          hits: [...prevState.hits, ...hits],\r\n          currentPage: prevState.currentPage + 1,\r\n          scroll: true,\r\n        }));\r\n      })\r\n      .catch(error => this.setState({ error }))\r\n      .finally(() => this.setState({ isLoading: false }));\r\n  };\r\n\r\n  toggleModal = (url, alt) => {\r\n    this.setState(prevState => ({\r\n      showModal: !prevState.showModal,\r\n      largeImageURL: url,\r\n      largeImageALT: alt,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      hits,\r\n      isLoading,\r\n      error,\r\n      showModal,\r\n      largeImageURL,\r\n      largeImageALT,\r\n      scroll,\r\n    } = this.state;\r\n    const shouldRenderLoadMoreBtn = hits.length > 0 && !isLoading;\r\n    return (\r\n      <>\r\n        <Searchbar onSubmit={this.onChangeQuery} />\r\n        {error && <h1>Что-то пошло не так!</h1>}\r\n        <Container>\r\n          <ul className=\"ImageGallery\">\r\n            {hits.map(item => (\r\n              <ImageGalleryItem\r\n                img={item.webformatURL}\r\n                alt={item.tags}\r\n                key={item.id}\r\n                onClick={() => this.toggleModal(item.largeImageURL, item.tags)}\r\n              />\r\n            ))}\r\n          </ul>\r\n          {scroll &&\r\n            window.scrollTo({\r\n              top: document.documentElement.scrollHeight,\r\n              behavior: 'smooth',\r\n            })}\r\n          {isLoading && <Spiner />}\r\n          {shouldRenderLoadMoreBtn && <Button onClick={this.fetchImages} />}\r\n        </Container>\r\n        {showModal && (\r\n          <Modal onClose={this.toggleModal}>\r\n            <img src={largeImageURL} alt={largeImageALT} />\r\n          </Modal>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImageGallery;\r\n","import React from 'react';\r\nimport './styles.scss';\r\nimport ImageGallery from './components/ImageGallery';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <ImageGallery />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}